var searchIndex = JSON.parse('{\
"voxrs":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,0,0,5,5,5,5,5,5],"n":["Game","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","downcast","drop","from","init","into","into_any","into_any_rc","new","on_key_input","render","resize","system","tick","try_from","try_into","type_id","upcast","camera","world_block_render","camera_move","camera_move_system","camera_render","camera_render_system","world_block_render","world_block_render_system"],"q":["voxrs","","","","","","","","","","","","","","","","","","","","","","","","voxrs::system","","voxrs::system::camera","","","","voxrs::system::world_block_render",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,0,0,0,0,0],"f":[null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[["u32",15],["assetmanager",3]]],[[["keyboardinput",3]]],[[],["blueprint",3]],[[["u32",15]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["option",4]],null,null,[[["camerares",3],["elapsedtimeres",3],["keyinputres",3]]],[[]],[[["blueprint",3],["camerares",3]]],[[]],[[["camerares",3],["blueprint",3],["worldblockres",3]]],[[]]],"p":[[3,"Game"]]},\
"voxrs_asset":{"doc":"","t":[12,4,3,3,3,3,4,13,3,13,13,3,13,13,13,3,3,3,3,3,3,3,13,13,12,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12],"n":["0","AssetBuildResult","AssetHandle","AssetHash","AssetManager","AssetPath","BlockSize","Err","FontAsset","L","M","MaterialAsset","NotBuilt","Ok","S","ShaderAsset","TextAsset","TextureAsset","WorldBlockAsset","WorldBlockAssetRaw","WorldChunkRaw","WorldMaterialAsset","Xl","Xs","alpha","as_ref","asset_hash","asset_path","block_counts","block_size","block_size","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf","buf","chunk_counts","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","diffuse_tex","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast_ref","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font","frag_shader","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get_asset","get_asset_mut","get_chunk_aabb","get_hash","get_hash","get_hash","get_world_pos","hash","hash","idx","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","material_handles","module","ne","ne","ne","ne","new","new","new","new","new","new","new","new","new","new","partial_cmp","path","ref_count","serialize","serialize","serialize","set_wgpu","text","texture","to_f32","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","vertex_shader","world_chunks","world_chunks","world_material","world_material"],"q":["voxrs_assetd":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cast AssetHandle to AssetHandle panic if T != U","","","","","","","","","","","","","","","cast &AssetHandle to &AssetHandle panic ifi":[1,0,0,0,0,0,0,2,0,3,3,0,2,2,3,0,0,0,0,0,0,0,3,3,4,2,5,5,6,7,6,8,2,5,9,10,1,4,11,12,13,7,6,3,8,14,15,2,5,9,10,1,4,11,12,13,7,6,3,8,14,15,11,13,7,5,9,10,1,3,5,9,10,1,3,9,2,5,9,10,10,1,4,11,12,13,7,6,3,8,14,15,2,5,9,10,1,4,11,12,13,7,6,3,8,14,15,10,6,3,8,4,2,5,5,9,10,1,4,11,12,13,7,6,3,8,14,15,5,2,5,9,10,1,4,11,12,13,7,6,3,8,14,15,5,10,1,6,3,8,5,10,1,5,10,10,1,6,3,8,15,4,2,5,9,10,10,10,10,10,10,1,4,11,12,13,7,6,3,8,14,15,9,5,5,7,5,10,1,7,5,1,8,2,5,9,10,1,4,11,12,13,7,6,3,8,14,15,2,5,9,10,1,4,11,12,13,7,6,3,8,14,15,14,11,10,1,6,8,5,9,10,4,11,12,13,7,14,15,1,10,5,6,3,8,9,12,13,3,5,9,10,1,3,10,2,5,9,10,1,4,11,12,13,7,6,3,8,14,15,2,5,9,10,1,4,11,12,13,7,6,3,8,14,15,2,5,9,10,1,4,11,12,13,7,6,3,8,14,15,2,2,5,9,10,1,4,11,12,13,7,6,3,8,14,15,4,7,6,7,6],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["assetbuildresult",4]],[[],["assethash",3]],[[],["assetpath",3]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[],["assethash",3]],[[],["blocksize",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[]],[[],[["asset",8],["assethandle",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["assethandle",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["bool",15]],[[["assetpath",3]],["bool",15]],[[["assethash",3]],["bool",15]],[[["worldblockassetraw",3]],["bool",15]],[[["blocksize",4]],["bool",15]],[[["worldchunkraw",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,null,[[]],[[]],[[]],[[["str",15]]],[[["assetpath",3]]],[[["str",15]]],[[["string",3]]],[[["string",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["assetpath",3]],[["asset",8],["assethandle",3]]],[[],["assetrlock",3]],[[],["assetwlock",3]],[[["usize",15]],["aabb",3]],[[],["u64",15]],[[],["assethash",3]],[[],["u64",15]],[[["usize",15]],["vec3",3]],[[]],[[]],null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["assetpath",3]],["bool",15]],[[["assethash",3]],["bool",15]],[[["worldblockassetraw",3]],["bool",15]],[[["worldchunkraw",3]],["bool",15]],[[["receiver",3],["assetpath",3],["result",4]]],[[]],[[["string",3]]],[[["str",15],["assetmanager",3]]],[[["u8",15],["vec",3]]],[[["string",3]]],[[["u8",15],["vec",3]]],[[["str",15],["assetmanager",3]]],[[["str",15],["assetmanager",3]]],[[["u8",15],["vec",3]]],[[["assethash",3]],[["option",4],["ordering",4]]],null,[[],["usize",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["queue",3],["arc",3],["device",3],["arc",3]]],null,null,[[],["f32",15]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],null,null,null,null,null],"p":[[3,"AssetHash"],[4,"AssetBuildResult"],[4,"BlockSize"],[3,"MaterialAsset"],[3,"AssetHandle"],[3,"WorldBlockAssetRaw"],[3,"WorldBlockAsset"],[3,"WorldChunkRaw"],[3,"AssetManager"],[3,"AssetPath"],[3,"ShaderAsset"],[3,"TextAsset"],[3,"TextureAsset"],[3,"WorldMaterialAsset"],[3,"FontAsset"]]},\
"voxrs_core":{"doc":"","t":[0,0,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["comp","res","0","DirectionComp","PositionComp","add_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","fmt","fmt","from","from","from","from","init","init","into","into","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","CameraRes","ElapsedTimeRes","KeyInputRes","MouseInputRes","WorldBlockRes","aspect","block_size","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_view_projection_matrix","chunk_counts","chunks","clear_blocks","clone","clone_into","create_ray","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","disable","disable","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","enable","enable","end_frame","end_frame","from","from","from","from","from","from","frustum_culling","get_block","get_delta","get_left_button_clicked","get_left_button_pressed","get_middle_button_clicked","get_middle_button_pressed","get_position","get_right_button_clicked","get_right_button_pressed","get_sphere","get_world_chunk_counts","get_xyz","handle","init","init","init","init","init","into","into","into","into","into","is_alt_pressed","is_ctrl_pressed","is_key_pressed","is_key_pressing","is_key_releasing","is_shift_pressed","keys","make_raw_asset","move_camera","move_camera_relative","new","new","new","new","on_key_pressed","on_key_released","on_modifier_changed","on_mouse_motion","on_mouse_pos","on_mouse_pressed","on_mouse_released","resize","rotate_camera","set_block","to_owned","trace","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","view_matrix"],"q":["voxrs_core","","voxrs_core::comp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","voxrs_core::res","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","CameraRes is free moving camera","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clear frame based information should be called after all …","","","","","","","","","","","","","","","","","","","get_xyz returns x(right) direction, y(up) direction, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","horizon: positive -> right, radians vert: positive -> up. …","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,0,0,1,1,2,1,2,1,2,1,2,1,1,2,2,1,2,1,2,1,2,1,2,1,1,2,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,0,0,0,0,0,3,4,3,5,6,4,7,3,5,6,4,7,3,4,4,4,7,7,3,5,6,7,3,5,6,4,7,7,3,5,6,4,7,7,5,6,3,5,6,4,7,3,5,6,4,7,5,6,5,6,3,5,6,4,7,7,4,4,6,6,6,6,6,6,6,6,3,4,3,4,3,5,6,4,7,3,5,6,4,7,5,5,5,5,5,5,5,4,3,3,3,5,6,4,5,5,5,6,6,6,6,3,3,4,7,4,3,5,6,4,7,3,5,6,4,7,3,5,6,4,7,3,5,6,4,7,3],"f":[null,null,null,null,null,[[["positioncomp",3]]],[[]],[[]],[[]],[[]],[[],["positioncomp",3]],[[],["directioncomp",3]],[[]],[[]],[[]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["vec3",3]],["positioncomp",3]],[[]],[[["vec3",3]],["directioncomp",3]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],null,null,null,null,null,[[],["f32",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mat4",3]],null,null,[[]],[[],["elapsedtimeres",3]],[[]],[[],["ray",3]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["f32",15]],["elapsedtimeres",3]],[[["camerares",3]],[["safecloner",4],["vec",3]]],[[["blockpos",3]],[["u8",15],["option",4]]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["sphere",3]],[[],["worldchunkcounts",3]],[[]],null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["bool",15],["virtualkeycode",4]],["bool",15]],[[["bool",15],["virtualkeycode",4]],["bool",15]],[[["bool",15],["virtualkeycode",4]],["bool",15]],[[],["bool",15]],[[["bool",15]]],[[],["worldblockassetraw",3]],[[["vec3",3]]],[[["vec3",3]]],[[["vec3",3],["angle",3],["u32",15],["f32",15]]],[[]],[[]],[[["assetpath",3],["assetmanager",3]]],[[["virtualkeycode",4]]],[[["virtualkeycode",4]]],[[["modifiersstate",3]]],[[]],[[]],[[["mousebutton",4]]],[[["mousebutton",4]]],[[["u32",15]]],[[["angle",3]]],[[["blockmatidx",6],["blockpos",3]]],[[]],[[["ray",3]],["option",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["mat4",3]]],"p":[[3,"PositionComp"],[3,"DirectionComp"],[3,"CameraRes"],[3,"WorldBlockRes"],[3,"KeyInputRes"],[3,"MouseInputRes"],[3,"ElapsedTimeRes"]]},\
"voxrs_derive":{"doc":"","t":[24],"n":["Asset"],"q":["voxrs_derive"],"d":["#[derive(Asset)] XxxAsset { … } generates"],"i":[0],"f":[null],"p":[]},\
"voxrs_ed":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,0,11,11,11,11,11,3,3,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5],"n":["Editor","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","downcast","drop","end_frame","from","init","into","into_any","into_any_rc","new","on_cursor_moved","on_key_input","on_modifier_changed","on_mouse_input","on_mouse_motion","on_receive_character","render","res","resize","save","system","tick","try_from","try_into","type_id","upcast","EditorAssetRes","EditorRes","as_any","as_any","as_any_mut","as_any_mut","block_indicator_mat","block_mat_id","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","from","from","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","new","new","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","camera","disable_input","end_frame","process_widget_message","shortcut","world_block_modify","world_block_render","control","control_system","render","render_system","disable_input","disable_input_system","end_frame","end_frame_system","process_widget_message","process_widget_message_system","indicator_render","indicator_render_system","render","render_system"],"q":["voxrs_ed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","voxrs_ed::res","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","voxrs_ed::system","","","","","","","voxrs_ed::system::camera","","","","voxrs_ed::system::disable_input","","voxrs_ed::system::end_frame","","voxrs_ed::system::process_widget_message","","voxrs_ed::system::world_block_modify","","voxrs_ed::system::world_block_render",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","disable input when ui has focus","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,0,2,3,2,3,2,3,2,3,2,3,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[]],[[]],[[],["usize",15]],[[]],[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[["u32",15],["assetmanager",3],["filesystem",8]]],[[]],[[["keyboardinput",3]]],[[["modifiersstate",3]]],[[["mousebutton",4],["elementstate",4]]],[[]],[[["char",15]]],[[],["blueprint",3]],null,[[["u32",15]]],[[["assetpath",3]],["result",6]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["option",4]],null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,null,[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]],[[["box",3],["global",3]],[["global",3],["any",8],["box",3]]],[[["arc",3]],[["any",8],["arc",3]]],[[["arc",3]],[["any",8],["arc",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[["rc",3]],[["any",8],["rc",3]]],[[["assetmanager",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],null,null,null,null,null,null,null,[[["keyinputres",3],["camerares",3],["elapsedtimeres",3],["mouseinputres",3]]],[[]],[[["camerares",3],["blueprint",3]]],[[]],[[["focusedwidget",3],["keyinputres",3],["mouseinputres",3]]],[[]],[[["keyinputres",3],["mouseinputres",3]]],[[]],[[["outputqueue",3],["worldblockres",3],["editorres",3],["assetmanager",3]]],[[]],[[["keyinputres",3],["mouseinputres",3],["camerares",3],["worldblockres",3],["blueprint",3],["editorassetres",3]]],[[]],[[["camerares",3],["blueprint",3],["worldblockres",3]]],[[]]],"p":[[3,"Editor"],[3,"EditorAssetRes"],[3,"EditorRes"]]},\
"voxrs_math":{"doc":"","tn":["AXES","AXES","AXES","AXES","AXES","Aabb","Angle","BLOCK_COUNT_IN_CHUNKSIDE","BlockPos","ChunkPos","Dir","Frustum","IDENTITY","IDENTITY","IDENTITY","IVec2","IVec3","Inside","Intersect","Mat3","Mat4","NotIntersect","ONE","ONE","ONE","ONE","ONE","Plane","Quat","Ray","RayAabbResult","Rect2","Sphere","TOTAL_BLOCK_COUNTS_IN_CHUNK","Vec2","Vec3","Vec4","W","WorldBlockCounts","WorldChunkCounts","X","X","X","X","X","XNeg","XPos","Y","Y","Y","Y","Y","YNeg","YPos","Z","Z","Z","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZERO","ZNeg","ZPos","aabb","abs","abs","abs","abs","abs","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_mat3","add_mat4","angle_between","angle_between","angle_between","any_orthogonal_vector","any_orthonormal_pair","any_orthonormal_vector","as_f32","as_f32","as_f64","as_f64","as_f64","as_f64","as_f64","as_f64","as_f64","as_f64","as_i32","as_i32","as_i32","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_u32","as_u32","as_u32","as_u32","as_u32","bitand","bitor","bits","bitxor","block_iter","block_iter_nth","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","ceil","ceil","ceil","center","check_aabb","clamp","clamp","clamp","clamp","clamp","clamp_half","clamp_length","clamp_length","clamp_length","clamp_length_max","clamp_length_max","clamp_length_max","clamp_length_min","clamp_length_min","clamp_length_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmpeq","cmpeq","cmpeq","cmpeq","cmpeq","cmpge","cmpge","cmpge","cmpge","cmpge","cmpgt","cmpgt","cmpgt","cmpgt","cmpgt","cmple","cmple","cmple","cmple","cmple","cmplt","cmplt","cmplt","cmplt","cmplt","cmpne","cmpne","cmpne","cmpne","cmpne","col","col","conjugate","cross","cross","cull_aabb","d","default","default","default","default","default","default","default","default","default","default","default_epsilon","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","determinant","determinant","dir","dist","dist_aabb","distance","distance","distance","distance_squared","distance_squared","distance_squared","div","div","div","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","dot","dot","dot","dot","dot","dot","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","exp","exp","exp","extend","extend","extend","extend","floor","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fract","fract","fract","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_affine3","from_angle","from_array","from_axis_angle","from_axis_angle","from_axis_angle","from_cols","from_cols","from_cols_array","from_cols_array","from_cols_array_2d","from_cols_array_2d","from_cols_slice","from_cols_slice","from_degrees","from_diagonal","from_diagonal","from_euler","from_euler","from_euler","from_index","from_index","from_mat3","from_mat4","from_min_max","from_proj","from_quat","from_quat","from_radians","from_rotation_arc","from_rotation_arc_colinear","from_rotation_mat3","from_rotation_mat4","from_rotation_translation","from_rotation_x","from_rotation_x","from_rotation_x","from_rotation_y","from_rotation_y","from_rotation_y","from_rotation_ypr","from_rotation_ypr","from_rotation_ypr","from_rotation_z","from_rotation_z","from_rotation_z","from_scale","from_scale","from_scale_angle_translation","from_scale_rotation_translation","from_scaled_axis","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_unaligned","from_slice_unaligned","from_slice_unaligned","from_slice_unaligned","from_slice_unaligned","from_slice_unaligned","from_translation","from_translation","from_unnorm","from_values","from_vec3","from_vec4","from_view_proj","from_xyzw","get_chunk_pos","get_index","get_index","get_matrix","get_neighbor","get_neighbor","get_world_pos","has_ivec2","has_point","hash","hash","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","intersect","intersect_aabb","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","inverse","inverse","inverse","is_finite","is_finite","is_finite","is_finite","is_finite","is_finite","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan","is_nan_mask","is_nan_mask","is_nan_mask","is_near_identity","is_normalized","is_normalized","is_normalized","is_normalized","is_valid","is_valid","len","length","length","length","length","length_recip","length_recip","length_recip","length_recip","length_squared","length_squared","length_squared","length_squared","lerp","lerp","lerp","lerp","look_at_lh","look_at_rh","max","max","max","max","max","max","max","max_element","max_element","max_element","max_element","max_element","min","min","min","min","min","min","min","min_element","min_element","min_element","min_element","min_element","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_mat3","mul_mat4","mul_quat","mul_scalar","mul_scalar","mul_vec3","mul_vec3","mul_vec3a","mul_vec3a","mul_vec4","ne","ne","ne","ne","ne","ne","ne","ne","neg","neg","neg","neg","neg","neg","neg","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","normal","normalize","normalize","normalize","normalize","normalize","normalize_or_zero","normalize_or_zero","normalize_or_zero","normalize_signed","not","opposite_dir","origin","orthographic_lh","orthographic_rh","orthographic_rh_gl","perp","perp","perp_dot","perp_dot","perspective_infinite_lh","perspective_infinite_reverse_lh","perspective_infinite_reverse_rh","perspective_infinite_rh","perspective_lh","perspective_rh","perspective_rh_gl","powf","powf","powf","product","product","product","product","product","product","product","product","project_point3","r","recip","recip","recip","round","round","round","row","row","select","select","select","select","select","serialize","set_matrix","signum","signum","signum","signum","signum","size","slerp","splat","splat","splat","splat","splat","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_mat3","sub_mat4","sum","sum","sum","sum","sum","sum","sum","sum","to_array","to_array","to_array","to_array","to_array","to_axis_angle","to_cols_array","to_cols_array","to_cols_array_2d","to_cols_array_2d","to_degrees","to_euler","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_radians","to_scale_rotation_translation","to_scaled_axis","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","transform","transform_point2","transform_point3","transform_point3a","transform_vector2","transform_vector3","transform_vector3a","transpose","transpose","truncate","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_normalize","try_normalize","try_normalize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unit","write_cols_to_slice","write_cols_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice","write_to_slice_unaligned","write_to_slice_unaligned","write_to_slice_unaligned","write_to_slice_unaligned","write_to_slice_unaligned","write_to_slice_unaligned","ww","www","wwww","wwwx","wwwy","wwwz","wwx","wwxw","wwxx","wwxy","wwxz","wwy","wwyw","wwyx","wwyy","wwyz","wwz","wwzw","wwzx","wwzy","wwzz","wx","wxw","wxww","wxwx","wxwy","wxwz","wxx","wxxw","wxxx","wxxy","wxxz","wxy","wxyw","wxyx","wxyy","wxyz","wxz","wxzw","wxzx","wxzy","wxzz","wy","wyw","wyww","wywx","wywy","wywz","wyx","wyxw","wyxx","wyxy","wyxz","wyy","wyyw","wyyx","wyyy","wyyz","wyz","wyzw","wyzx","wyzy","wyzz","wz","wzw","wzww","wzwx","wzwy","wzwz","wzx","wzxw","wzxx","wzxy","wzxz","wzy","wzyw","wzyx","wzyy","wzyz","wzz","wzzw","wzzx","wzzy","wzzz","x","x","x","x","x","xw","xww","xwww","xwwx","xwwy","xwwz","xwx","xwxw","xwxx","xwxy","xwxz","xwy","xwyw","xwyx","xwyy","xwyz","xwz","xwzw","xwzx","xwzy","xwzz","xx","xx","xx","xx","xx","xxw","xxww","xxwx","xxwy","xxwz","xxx","xxx","xxx","xxx","xxx","xxxw","xxxx","xxxx","xxxx","xxxx","xxxx","xxxy","xxxy","xxxy","xxxy","xxxy","xxxz","xxxz","xxxz","xxy","xxy","xxy","xxy","xxy","xxyw","xxyx","xxyx","xxyx","xxyx","xxyx","xxyy","xxyy","xxyy","xxyy","xxyy","xxyz","xxyz","xxyz","xxz","xxz","xxz","xxzw","xxzx","xxzx","xxzx","xxzy","xxzy","xxzy","xxzz","xxzz","xxzz","xy","xy","xy","xyw","xyww","xywx","xywy","xywz","xyx","xyx","xyx","xyx","xyx","xyxw","xyxx","xyxx","xyxx","xyxx","xyxx","xyxy","xyxy","xyxy","xyxy","xyxy","xyxz","xyxz","xyxz","xyy","xyy","xyy","xyy","xyy","xyyw","xyyx","xyyx","xyyx","xyyx","xyyx","xyyy","xyyy","xyyy","xyyy","xyyy","xyyz","xyyz","xyyz","xyz","xyzx","xyzx","xyzx","xyzy","xyzy","xyzy","xyzz","xyzz","xyzz","xz","xz","xz","xzw","xzww","xzwx","xzwy","xzwz","xzx","xzx","xzx","xzxw","xzxx","xzxx","xzxx","xzxy","xzxy","xzxy","xzxz","xzxz","xzxz","xzy","xzy","xzy","xzyw","xzyx","xzyx","xzyx","xzyy","xzyy","xzyy","xzyz","xzyz","xzyz","xzz","xzz","xzz","xzzw","xzzx","xzzx","xzzx","xzzy","xzzy","xzzy","xzzz","xzzz","xzzz","y","y","y","y","y","yw","yww","ywww","ywwx","ywwy","ywwz","ywx","ywxw","ywxx","ywxy","ywxz","ywy","ywyw","ywyx","ywyy","ywyz","ywz","ywzw","ywzx","ywzy","ywzz","yx","yx","yx","yx","yx","yxw","yxww","yxwx","yxwy","yxwz","yxx","yxx","yxx","yxx","yxx","yxxw","yxxx","yxxx","yxxx","yxxx","yxxx","yxxy","yxxy","yxxy","yxxy","yxxy","yxxz","yxxz","yxxz","yxy","yxy","yxy","yxy","yxy","yxyw","yxyx","yxyx","yxyx","yxyx","yxyx","yxyy","yxyy","yxyy","yxyy","yxyy","yxyz","yxyz","yxyz","yxz","yxz","yxz","yxzw","yxzx","yxzx","yxzx","yxzy","yxzy","yxzy","yxzz","yxzz","yxzz","yy","yy","yy","yy","yy","yyw","yyww","yywx","yywy","yywz","yyx","yyx","yyx","yyx","yyx","yyxw","yyxx","yyxx","yyxx","yyxx","yyxx","yyxy","yyxy","yyxy","yyxy","yyxy","yyxz","yyxz","yyxz","yyy","yyy","yyy","yyy","yyy","yyyw","yyyx","yyyx","yyyx","yyyx","yyyx","yyyy","yyyy","yyyy","yyyy","yyyy","yyyz","yyyz","yyyz","yyz","yyz","yyz","yyzw","yyzx","yyzx","yyzx","yyzy","yyzy","yyzy","yyzz","yyzz","yyzz","yz","yz","yz","yzw","yzww","yzwx","yzwy","yzwz","yzx","yzx","yzx","yzxw","yzxx","yzxx","yzxx","yzxy","yzxy","yzxy","yzxz","yzxz","yzxz","yzy","yzy","yzy","yzyw","yzyx","yzyx","yzyx","yzyy","yzyy","yzyy","yzyz","yzyz","yzyz","yzz","yzz","yzz","yzzw","yzzx","yzzx","yzzx","yzzy","yzzy","yzzy","yzzz","yzzz","yzzz","z","z","z","z","z","zw","zww","zwww","zwwx","zwwy","zwwz","zwx","zwxw","zwxx","zwxy","zwxz","zwy","zwyw","zwyx","zwyy","zwyz","zwz","zwzw","zwzx","zwzy","zwzz","zx","zx","zx","zxw","zxww","zxwx","zxwy","zxwz","zxx","zxx","zxx","zxxw","zxxx","zxxx","zxxx","zxxy","zxxy","zxxy","zxxz","zxxz","zxxz","zxy","zxy","zxy","zxyw","zxyx","zxyx","zxyx","zxyy","zxyy","zxyy","zxyz","zxyz","zxyz","zxz","zxz","zxz","zxzw","zxzx","zxzx","zxzx","zxzy","zxzy","zxzy","zxzz","zxzz","zxzz","zy","zy","zy","zyw","zyww","zywx","zywy","zywz","zyx","zyx","zyx","zyxw","zyxx","zyxx","zyxx","zyxy","zyxy","zyxy","zyxz","zyxz","zyxz","zyy","zyy","zyy","zyyw","zyyx","zyyx","zyyx","zyyy","zyyy","zyyy","zyyz","zyyz","zyyz","zyz","zyz","zyz","zyzw","zyzx","zyzx","zyzx","zyzy","zyzy","zyzy","zyzz","zyzz","zyzz","zz","zz","zz","zzw","zzww","zzwx","zzwy","zzwz","zzx","zzx","zzx","zzxw","zzxx","zzxx","zzxx","zzxy","zzxy","zzxy","zzxz","zzxz","zzxz","zzy","zzy","zzy","zzyw","zzyx","zzyx","zzyx","zzyy","zzyy","zzyy","zzyz","zzyz","zzyz","zzz","zzz","zzz","zzzw","zzzx","zzzx","zzzx","zzzy","zzzy","zzzy","zzzz","zzzz","zzzz","dir","dist","pos"],"q":["voxrs_mathvoxrs_math::RayAabbResult","",""],"d":["The unit axes.","The unit axes.","The unit axes.","The unit axes.","The unit axes.","","","block count in chunk direction (x, y, z)","","","XPos : X Positive direction , XNeg : X Negative direction","","A 3x3 identity matrix, where all diagonal elements are <code>1</code>, …","A 4x4 identity matrix, where all diagonal elements are <code>1</code>, …","The identity quaternion. Corresponds to no rotation.","A 2-dimensional vector.","A 3-dimensional vector.","","","A 3x3 column major matrix.","A 4x4 column major matrix.","","All ones.","All ones.","All ones.","All ones.","All ones.","","A quaternion representing an orientation.","","RayAabbResult Inside: ray is inside of aabb NotIntersect: …","","","total block count in chunk","A 2-dimensional vector.","A 3-dimensional vector without SIMD support.","A 4-dimensional vector.","<code>[0, 0, 0, 1]</code>: a unit-length vector pointing along the …","block count in world in each direction (x, y, z)","chunk count in world in each direction (x, y, z)","<code>[1, 0]</code>: a unit-length vector pointing along the positive …","<code>[1, 0]</code>: a unit-length vector pointing along the positive …","<code>[1, 0, 0]</code>: a unit-length vector pointing along the …","<code>[1, 0, 0]</code>: a unit-length vector pointing along the …","<code>[1, 0, 0, 0]</code>: a unit-length vector pointing along the …","","","<code>[0, 1]</code>: a unit-length vector pointing along the positive …","<code>[0, 1]</code>: a unit-length vector pointing along the positive …","<code>[0, 1, 0]</code>: a unit-length vector pointing along the …","<code>[0, 1, 0]</code>: a unit-length vector pointing along the …","<code>[0, 1, 0, 0]</code>: a unit-length vector pointing along the …","","","<code>[0, 0, 1]</code>: a unit-length vector pointing along the …","<code>[0, 0, 1]</code>: a unit-length vector pointing along the …","<code>[0, 0, 1, 0]</code>: a unit-length vector pointing along the …","A 3x3 matrix with all elements set to <code>0.0</code>.","A 4x4 matrix with all elements set to <code>0.0</code>.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","All zeroes.","","","","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","Returns a vector containing the absolute value of each …","","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","Returns true if the absolute difference of all elements …","","","","Adds two quaternions. The sum is not guaranteed to be …","","","","","","","","","","","","Adds two 3x3 matrices.","Adds two 4x4 matrices.","Returns the angle (in radians) for the minimal rotation …","Returns the angle (in radians) between <code>self</code> and <code>other</code>.","Returns the angle (in radians) between two vectors.","Returns somes vector that is orthogonal to the given one.","Given a unit-length vector return two other vectors that …","Returns any unit-length vector that is orthogonal to the …","Casts all elements of <code>self</code> to <code>f32</code>.","Casts all elements of <code>self</code> to <code>f32</code>.","","","","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>f64</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","Casts all elements of <code>self</code> to <code>i32</code>.","","","","","","","","","","","","","","","","","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","Casts all elements of <code>self</code> to <code>u32</code>.","","","","","","iterator only nth","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","Returns a vector containing the smallest integer greater …","","ray - aabb intersection reference: …","Component-wise clamping of values, similar to [<code>f32::clamp</code>]…","Component-wise clamping of values, similar to [<code>f32::clamp</code>]…","Component-wise clamping of values, similar to [<code>f32::clamp</code>]…","Component-wise clamping of values, similar to [<code>f32::clamp</code>]…","Component-wise clamping of values, similar to [<code>f32::clamp</code>]…","clamp -(PI/2) to (PI/2)","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no less than <code>min</code> and no …","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no more than <code>max</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","Returns a vector with a length no less than <code>min</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>==</code> …","Returns a vector mask containing the result of a <code>>=</code> …","Returns a vector mask containing the result of a <code>>=</code> …","Returns a vector mask containing the result of a <code>>=</code> …","Returns a vector mask containing the result of a <code>>=</code> …","Returns a vector mask containing the result of a <code>>=</code> …","Returns a vector mask containing the result of a <code>></code> …","Returns a vector mask containing the result of a <code>></code> …","Returns a vector mask containing the result of a <code>></code> …","Returns a vector mask containing the result of a <code>></code> …","Returns a vector mask containing the result of a <code>></code> …","Returns a vector mask containing the result of a <code><=</code> …","Returns a vector mask containing the result of a <code><=</code> …","Returns a vector mask containing the result of a <code><=</code> …","Returns a vector mask containing the result of a <code><=</code> …","Returns a vector mask containing the result of a <code><=</code> …","Returns a vector mask containing the result of a <code><</code> …","Returns a vector mask containing the result of a <code><</code> …","Returns a vector mask containing the result of a <code><</code> …","Returns a vector mask containing the result of a <code><</code> …","Returns a vector mask containing the result of a <code><</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns a vector mask containing the result of a <code>!=</code> …","Returns the matrix column for the given <code>index</code>.","Returns the matrix column for the given <code>index</code>.","Returns the quaternion conjugate of <code>self</code>. For a unit …","Computes the cross product of <code>self</code> and <code>other</code>.","Computes the cross product of <code>self</code> and <code>other</code>.","culling frustum and aabb is aabb is inside or intersect …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the determinant of <code>self</code>.","Returns the determinant of <code>self</code>.","","","","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Computes the Euclidean distance between two points in …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Compute the squared euclidean distance between two points …","Divides a quaternion by a scalar value. The quotient is …","","","","","","","","","","","","","","","","","","","","","Computes the dot product of <code>self</code> and <code>other</code>. The dot …","Computes the dot product of <code>self</code> and <code>other</code>.","Computes the dot product of <code>self</code> and <code>other</code>.","Computes the dot product of <code>self</code> and <code>other</code>.","Computes the dot product of <code>self</code> and <code>other</code>.","Computes the dot product of <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Returns a vector containing <code>e^self</code> (the exponential …","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 3D vector from <code>self</code> and the given <code>z</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Creates a 4D vector from <code>self</code> and the given <code>w</code> value.","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","Returns a vector containing the largest integer less than …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","Returns a vector containing the fractional part of the …","","","","","","","","","","","","","","","","","","Creates a 3x3 matrix from the top left submatrix of the …","","","","Creates a <code>Vec2</code> from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","","","","Creates a <code>Vec2</code> from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","","Creates a <code>Vec2</code> from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","","Creates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","","","","","","","","Creates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","","","","","","Creates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","","","","","","","","","","","Creates a quaternion from a 3x3 rotation matrix inside a …","Creates an affine transformation matrix from the given 2D …","Creates a rotation quaternion from an array.","Creates a 3D rotation matrix from a normalized rotation …","Creates an affine transformation matrix containing a 3D …","Create a quaternion for a normalized rotation <code>axis</code> and …","Creates a 3x3 matrix from three column vectors.","Creates a 4x4 matrix from four column vectors.","Creates a 3x3 matrix from a <code>[S; 9]</code> array stored in column …","Creates a 4x4 matrix from a <code>[S; 16]</code> array stored in …","Creates a 3x3 matrix from a <code>[[S; 3]; 3]</code> 2D array stored …","Creates a 4x4 matrix from a <code>[[S; 4]; 4]</code> 2D array stored …","Creates a 3x3 matrix from the first 9 values in <code>slice</code>.","Creates a 4x4 matrix from the first 16 values in <code>slice</code>.","","Creates a 3x3 matrix with its diagonal set to <code>diagonal</code> …","Creates a 4x4 matrix with its diagonal set to <code>diagonal</code> …","Creates a 3D rotation matrix from the given euler …","Creates a affine transformation matrix containing a …","Creates a quaternion from the given euler rotation …","","","Creates a quaternion from a 3x3 rotation matrix.","Creates a quaternion from a 3x3 rotation matrix inside a …","","create sphere using projection reference: …","Creates a 3D rotation matrix from the given quaternion.","Creates an affine transformation matrix from the given …","","Gets the minimal rotation for transforming <code>from</code> to <code>to</code>. …","Gets the minimal rotation for transforming <code>from</code> to either …","","","Creates an affine transformation matrix from the given 3D …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","","","","Creates a 3D rotation matrix from <code>angle</code> (in radians) …","Creates an affine transformation matrix containing a 3D …","Creates a quaternion from the <code>angle</code> (in radians) around …","Creates an affine transformation matrix from the given …","Creates an affine transformation matrix containing the …","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 3D …","Create a quaternion that rotates <code>v.length()</code> radians …","Creates a rotation quaternion from a slice.","Creates a vector from the first N values in <code>slice</code>.","Creates a vector from the first N values in <code>slice</code>.","Creates a vector from the first N values in <code>slice</code>.","Creates a vector from the first N values in <code>slice</code>.","Creates a vector from the first N values in <code>slice</code>.","","","","","","","Creates an affine transformation matrix from the given 2D …","Creates an affine transformation matrix from the given 3D …","","","","Creates a new rotation quaternion from a 4D vector.","","Creates a new rotation quaternion.","","get index of chunk if index is out of bound, return None","get index of this block return None if out of index …","get matrix using row, and column index from 1 (row >= 1 …","","","","","","","","","","","","","","","","","","","sphere aabb intersection reference: …","","","","","","","","","","","","","","","","","","","","","","Returns the inverse of <code>self</code>.","Returns the inverse of <code>self</code>.","Returns the inverse of a normalized quaternion.","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite. If …","Returns <code>true</code> if, and only if, all elements are finite.  …","Returns <code>true</code> if, and only if, all elements are finite.  …","Returns <code>true</code> if, and only if, all elements are finite.  …","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Returns <code>true</code> if any elements are <code>NaN</code>.","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","Performs <code>is_nan</code> on each element of self, returning a …","","Returns whether <code>self</code> of length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","Returns whether <code>self</code> is length <code>1.0</code> or not.","","","","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes the length of <code>self</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes <code>1.0 / length()</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Computes the squared length of <code>self</code>.","Performs a linear interpolation between <code>self</code> and <code>other</code> …","Performs a linear interpolation between <code>self</code> and <code>other</code> …","Performs a linear interpolation between <code>self</code> and <code>other</code> …","Performs a linear interpolation between <code>self</code> and <code>other</code> …","Creates a left-handed view matrix using a camera …","Creates a right-handed view matrix using a camera …","","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","Returns a vector containing the maximum values for each …","","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns the horizontal maximum of <code>self</code>.","Returns a vector containing the mininum values for each …","Returns a vector containing the mininum values for each …","Returns a vector containing the mininum values for each …","Returns a vector containing the mininum values for each …","Returns a vector containing the mininum values for each …","","","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","Returns the horizontal minimum of <code>self</code>.","","","","","","","","","","Multiplies a quaternion by a scalar value. The product is …","","","","","","","","","","","","","","","","","","","","","","","","","Multiplies two 3x3 matrices.","Multiplies two 4x4 matrices.","Multiplies two quaternions. If they each represent a …","Multiplies a 3x3 matrix by a scalar.","Multiplies this matrix by a scalar value.","Transforms a 3D vector.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a <code>Vec3A</code>.","Multiplies a quaternion and a 3D vector, returning the …","Transforms a 4D vector.","","","","","","","","","","","","","","","","","","construct Frustum from view projection matrix","if some p on plane, p.x * x + p.y * y + p.z * z + d = 0 …","","","","","","","","Creates a new vector.","Creates a new vector.","Creates a new 3D vector.","Creates a new 3D vector.","Creates a new 4D vector.","","make radians in [0, 2*PI)","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0.","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","make radians in [-PI, PI)","","","","Creates a left-handed orthographic projection matrix with …","Creates a right-handed orthographic projection matrix …","Creates a right-handed orthographic projection matrix …","Returns a vector that is equal to <code>self</code> rotated by 90 …","Returns a vector that is equal to <code>self</code> rotated by 90 …","The perpendicular dot product of <code>self</code> and <code>other</code>. Also …","The perpendicular dot product of <code>self</code> and <code>other</code>. Also …","Creates an infinite left-handed perspective projection …","Creates an infinite left-handed perspective projection …","Creates an infinite reverse right-handed perspective …","Creates an infinite right-handed perspective projection …","Creates a left-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with …","Creates a right-handed perspective projection matrix with …","Returns a vector containing each element of <code>self</code> raised …","Returns a vector containing each element of <code>self</code> raised …","Returns a vector containing each element of <code>self</code> raised …","","","","","","","","","Transforms the given 3D vector as a point, applying …","","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the reciprocal <code>1.0/n</code> of each …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns a vector containing the nearest integer to a …","Returns the matrix row for the given <code>index</code>.","Returns the matrix row for the given <code>index</code>.","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","Creates a vector from the elements in <code>if_true</code> and <code>if_false</code>…","","set matrix using row, and column index from 1 (row >= 1 …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","Returns a vector with elements representing the sign of …","","Performs a spherical linear interpolation between <code>self</code> …","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","Creates a vector with all elements set to <code>v</code>.","","","","Subtracts the other quaternion from self. The difference …","","","","","","","","","","","","Subtracts two 3x3 matrices.","Subtracts two 4x4 matrices.","","","","","","","","","<code>[x, y]</code>","<code>[x, y]</code>","<code>[x, y, z]</code>","<code>[x, y, z]</code>","<code>[x, y, z, w]</code>","Returns the rotation axis and angle (in radians) of <code>self</code>.","Creates a <code>[S; 9]</code> array storing data in column major order.…","Creates a <code>[S; 16]</code> array storing data in column major …","Creates a <code>[[S; 3]; 3]</code> 2D array storing data in column …","Creates a <code>[[S; 4]; 4]</code> 2D array storing data in column …","","Returns the rotation angles for the given euler rotation …","","","","","","","","","","","","","","","","","","","","","Extracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …","Returns the rotation axis scaled by the rotation in …","","","","","","","","","move self start from parent.min and clip using parent area","Transforms the given 2D vector as a point.","Transforms the given 3D vector as a point.","Transforms the given <code>Vec3A</code> as 3D point.","Rotates the given 2D vector.","Transforms the give 3D vector as a direction.","Transforms the give <code>Vec3A</code> as 3D vector.","Returns the transpose of <code>self</code>.","Returns the transpose of <code>self</code>.","Creates a <code>Vec2</code> from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a <code>Vec2</code> from the <code>x</code> and <code>y</code> elements of <code>self</code>, …","Creates a <code>Vec3</code> from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","Returns <code>self</code> normalized to length 1.0 if possible, else …","","","","","","","","","","","","","","","","","","","","","","","Writes the columns of <code>self</code> to the first 9 elements in …","Writes the columns of <code>self</code> to the first 16 elements in …","Writes the quaternion to an unaligned slice.","Writes the elements of <code>self</code> to the first N elements in …","Writes the elements of <code>self</code> to the first N elements in …","Writes the elements of <code>self</code> to the first N elements in …","Writes the elements of <code>self</code> to the first N elements in …","Writes the elements of <code>self</code> to the first N elements in …i":[1,2,3,4,5,0,0,0,0,0,0,0,6,7,8,0,0,9,9,0,0,9,1,2,3,4,5,0,0,0,0,0,0,0,0,0,0,5,0,0,1,2,3,4,5,10,10,1,2,3,4,5,10,10,3,4,5,6,7,1,2,3,4,5,10,10,11,1,2,3,4,5,12,6,7,8,1,3,5,12,6,7,8,1,2,3,4,5,12,1,2,3,4,5,6,7,8,1,3,3,3,3,2,4,6,7,8,1,2,3,4,5,1,3,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,1,2,3,4,5,10,10,10,10,13,13,14,12,10,15,16,13,9,17,18,19,20,21,11,6,7,8,1,2,3,4,5,14,12,10,15,16,13,9,17,18,19,20,21,11,6,7,8,1,2,3,4,5,18,1,3,5,14,13,1,2,3,4,5,12,1,3,5,1,3,5,1,3,5,14,12,10,16,9,17,18,19,20,21,11,6,7,8,1,2,3,4,5,14,12,10,16,9,17,18,19,20,21,11,6,7,8,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,6,7,8,3,4,15,16,12,13,6,7,8,1,2,3,4,5,12,6,7,8,1,2,3,4,5,6,7,1,2,3,4,5,19,6,7,13,16,16,1,3,5,1,3,5,8,1,1,2,2,3,3,4,4,5,5,1,1,2,2,3,3,4,4,5,5,8,1,2,3,4,5,12,10,16,9,17,19,20,21,11,6,7,8,1,2,3,4,5,1,3,5,1,2,3,4,1,3,5,14,12,10,15,16,13,9,17,18,19,20,21,11,6,6,7,7,8,8,1,1,2,2,3,3,4,4,5,5,1,3,5,14,12,10,15,16,13,9,17,18,19,20,20,21,11,6,6,6,6,7,7,8,1,1,1,1,1,1,1,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,5,5,5,5,5,5,5,5,8,6,8,6,7,8,6,7,6,7,6,7,6,7,12,6,7,6,7,8,21,11,8,8,17,18,6,7,12,8,8,8,8,7,6,7,8,6,7,8,6,7,8,6,7,8,6,7,6,7,8,8,1,2,3,4,5,8,1,2,3,4,5,6,7,16,13,11,8,18,8,11,21,11,0,21,11,21,17,14,2,4,1,2,3,4,5,1,2,3,4,5,17,18,14,12,10,15,16,13,9,17,18,19,20,21,11,6,7,8,1,2,3,4,5,6,7,8,6,7,8,1,3,5,6,7,8,1,3,5,1,3,5,8,8,1,3,5,21,11,20,8,1,3,5,8,1,3,5,8,1,3,5,8,1,3,5,7,7,17,1,2,3,4,5,14,1,2,3,4,5,1,2,3,4,5,14,17,1,2,3,4,5,6,6,6,6,6,7,7,7,7,8,8,8,8,1,1,2,2,3,3,4,4,5,5,8,1,1,2,2,3,3,4,4,5,5,6,7,8,6,7,6,8,6,8,7,12,16,9,17,19,20,21,11,12,8,1,2,3,4,5,14,12,15,16,13,17,18,19,20,21,11,1,2,3,4,5,16,12,8,1,3,5,1,3,5,12,10,10,13,7,7,7,1,2,1,2,7,7,7,7,7,7,7,1,3,5,6,7,8,1,2,3,4,5,7,18,1,3,5,1,3,5,6,7,1,2,3,4,5,19,0,1,2,3,4,5,17,8,1,2,3,4,5,12,6,7,8,1,2,3,4,5,12,1,2,3,4,5,6,7,6,7,8,1,2,3,4,5,1,2,3,4,5,8,6,7,6,7,12,8,14,12,10,16,9,17,18,19,20,21,11,6,7,8,1,2,3,4,5,12,7,8,6,7,8,1,2,3,4,5,17,6,7,7,6,7,7,6,7,3,4,5,14,12,10,15,16,13,9,17,18,19,20,21,11,6,7,8,1,2,3,4,5,14,12,10,15,16,13,9,17,18,19,20,21,11,6,7,8,1,2,3,4,5,1,3,5,14,12,10,15,16,13,9,17,18,19,20,21,11,6,7,8,1,2,3,4,5,14,6,7,8,1,2,3,4,5,8,1,2,3,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,16,19,20,21,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,2,3,4,5,5,5,5,5,5,1,2,3,4,5,5,1,2,3,4,5,1,2,3,4,5,3,4,5,1,2,3,4,5,5,1,2,3,4,5,1,2,3,4,5,3,4,5,3,4,5,5,3,4,5,3,4,5,3,4,5,3,4,5,5,5,5,5,5,1,2,3,4,5,5,1,2,3,4,5,1,2,3,4,5,3,4,5,1,2,3,4,5,5,1,2,3,4,5,1,2,3,4,5,3,4,5,5,3,4,5,3,4,5,3,4,5,3,4,5,5,5,5,5,5,3,4,5,5,3,4,5,3,4,5,3,4,5,3,4,5,5,3,4,5,3,4,5,3,4,5,3,4,5,5,3,4,5,3,4,5,3,4,5,16,19,20,21,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,2,3,4,5,5,5,5,5,5,1,2,3,4,5,5,1,2,3,4,5,1,2,3,4,5,3,4,5,1,2,3,4,5,5,1,2,3,4,5,1,2,3,4,5,3,4,5,3,4,5,5,3,4,5,3,4,5,3,4,5,1,2,3,4,5,5,5,5,5,5,1,2,3,4,5,5,1,2,3,4,5,1,2,3,4,5,3,4,5,1,2,3,4,5,5,1,2,3,4,5,1,2,3,4,5,3,4,5,3,4,5,5,3,4,5,3,4,5,3,4,5,3,4,5,5,5,5,5,5,3,4,5,5,3,4,5,3,4,5,3,4,5,3,4,5,5,3,4,5,3,4,5,3,4,5,3,4,5,5,3,4,5,3,4,5,3,4,5,16,19,20,21,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,3,4,5,5,5,5,5,5,3,4,5,5,3,4,5,3,4,5,3,4,5,3,4,5,5,3,4,5,3,4,5,3,4,5,3,4,5,5,3,4,5,3,4,5,3,4,5,3,4,5,5,5,5,5,5,3,4,5,5,3,4,5,3,4,5,3,4,5,3,4,5,5,3,4,5,3,4,5,3,4,5,3,4,5,5,3,4,5,3,4,5,3,4,5,3,4,5,5,5,5,5,5,3,4,5,5,3,4,5,3,4,5,3,4,5,3,4,5,5,3,4,5,3,4,5,3,4,5,3,4,5,5,3,4,5,3,4,5,3,4,5,22,22,22],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["f32",15]],["aabb",3]],[[],["vec2",3]],[[],["ivec2",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec4",3]],[[],["bool",15]],[[["mat3",3],["f32",15]],["bool",15]],[[["mat4",3],["f32",15]],["bool",15]],[[["f32",15],["quat",3]],["bool",15]],[[["f32",15],["vec2",3]],["bool",15]],[[["vec3",3],["f32",15]],["bool",15]],[[["vec4",3],["f32",15]],["bool",15]],[[]],[[["mat3",3]],["mat3",3]],[[["mat4",3]]],[[["quat",3]],["quat",3]],[[["vec2",3]],["vec2",3]],[[["ivec2",3]],["ivec2",3]],[[["vec3",3]],["vec3",3]],[[["ivec3",3]],["ivec3",3]],[[["vec4",3]],["vec4",3]],[[]],[[["vec2",3]]],[[["ivec2",3]]],[[["vec3",3]]],[[["ivec3",3]]],[[["vec4",3]]],[[["mat3",3]],["mat3",3]],[[["mat4",3]],["mat4",3]],[[["quat",3]],["f32",15]],[[["vec2",3]],["f32",15]],[[["vec3",3]],["f32",15]],[[],["vec3",3]],[[]],[[],["vec3",3]],[[],["vec2",3]],[[],["vec3",3]],[[],["dmat3",3]],[[],["dmat4",3]],[[],["dquat",3]],[[],["dvec2",3]],[[],["dvec2",3]],[[],["dvec3",3]],[[],["dvec3",3]],[[],["dvec4",3]],[[],["ivec2",3]],[[],["ivec3",3]],[[],["ivec4",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["uvec2",3]],[[],["uvec2",3]],[[],["uvec3",3]],[[],["uvec3",3]],[[],["uvec4",3]],[[]],[[]],[[]],[[]],[[["f32",15]]],[[["i32",15],["f32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["vec2",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec3",3]],[[["aabb",3]],["rayaabbresult",4]],[[["vec2",3]],["vec2",3]],[[["ivec2",3]],["ivec2",3]],[[["vec3",3]],["vec3",3]],[[["ivec3",3]],["ivec3",3]],[[["vec4",3]],["vec4",3]],[[]],[[["f32",15]],["vec2",3]],[[["f32",15]],["vec3",3]],[[["f32",15]],["vec4",3]],[[["f32",15]],["vec2",3]],[[["f32",15]],["vec3",3]],[[["f32",15]],["vec4",3]],[[["f32",15]],["vec2",3]],[[["f32",15]],["vec3",3]],[[["f32",15]],["vec4",3]],[[],["aabb",3]],[[],["angle",3]],[[],["dir",4]],[[],["plane",3]],[[],["rayaabbresult",4]],[[],["rect2",3]],[[],["sphere",3]],[[],["worldblockcounts",3]],[[],["worldchunkcounts",3]],[[],["chunkpos",3]],[[],["blockpos",3]],[[],["mat3",3]],[[],["mat4",3]],[[],["quat",3]],[[],["vec2",3]],[[],["ivec2",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec4",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vec2",3]],["bvec2",3]],[[["ivec2",3]],["bvec2",3]],[[["vec3",3]],["bvec3",3]],[[["ivec3",3]],["bvec3",3]],[[["vec4",3]],["bvec4a",3]],[[["vec2",3]],["bvec2",3]],[[["ivec2",3]],["bvec2",3]],[[["vec3",3]],["bvec3",3]],[[["ivec3",3]],["bvec3",3]],[[["vec4",3]],["bvec4a",3]],[[["vec2",3]],["bvec2",3]],[[["ivec2",3]],["bvec2",3]],[[["vec3",3]],["bvec3",3]],[[["ivec3",3]],["bvec3",3]],[[["vec4",3]],["bvec4a",3]],[[["vec2",3]],["bvec2",3]],[[["ivec2",3]],["bvec2",3]],[[["vec3",3]],["bvec3",3]],[[["ivec3",3]],["bvec3",3]],[[["vec4",3]],["bvec4a",3]],[[["vec2",3]],["bvec2",3]],[[["ivec2",3]],["bvec2",3]],[[["vec3",3]],["bvec3",3]],[[["ivec3",3]],["bvec3",3]],[[["vec4",3]],["bvec4a",3]],[[["vec2",3]],["bvec2",3]],[[["ivec2",3]],["bvec2",3]],[[["vec3",3]],["bvec3",3]],[[["ivec3",3]],["bvec3",3]],[[["vec4",3]],["bvec4a",3]],[[["usize",15]],["vec3",3]],[[["usize",15]],["vec4",3]],[[],["quat",3]],[[["vec3",3]],["vec3",3]],[[["ivec3",3]],["ivec3",3]],[[],["bool",15]],[[],["f32",15]],[[],["angle",3]],[[]],[[],["mat3",3]],[[],["mat4",3]],[[],["quat",3]],[[],["vec2",3]],[[],["ivec2",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec4",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["f32",15]],[[],["f32",15]],null,[[["vec3",3]],["f32",15]],[[],["f32",15]],[[["vec2",3]],["f32",15]],[[["vec3",3]],["f32",15]],[[["vec4",3]],["f32",15]],[[["vec2",3]],["f32",15]],[[["vec3",3]],["f32",15]],[[["vec4",3]],["f32",15]],[[["f32",15]],["quat",3]],[[["vec2",3]],["vec2",3]],[[["f32",15]],["vec2",3]],[[["ivec2",3]],["ivec2",3]],[[["i32",15]],["ivec2",3]],[[["vec3",3]],["vec3",3]],[[["f32",15]],["vec3",3]],[[["ivec3",3]],["ivec3",3]],[[["i32",15]],["ivec3",3]],[[["vec4",3]],["vec4",3]],[[["f32",15]],["vec4",3]],[[["f32",15]]],[[["vec2",3]]],[[["ivec2",3]]],[[["i32",15]]],[[["vec3",3]]],[[["f32",15]]],[[["ivec3",3]]],[[["i32",15]]],[[["f32",15]]],[[["vec4",3]]],[[["quat",3]],["f32",15]],[[["vec2",3]],["f32",15]],[[["ivec2",3]],["i32",15]],[[["vec3",3]],["f32",15]],[[["ivec3",3]],["i32",15]],[[["vec4",3]],["f32",15]],[[["angle",3]],["bool",15]],[[["dir",4]],["bool",15]],[[["plane",3]],["bool",15]],[[["rayaabbresult",4]],["bool",15]],[[["rect2",3]],["bool",15]],[[["worldblockcounts",3]],["bool",15]],[[["worldchunkcounts",3]],["bool",15]],[[["chunkpos",3]],["bool",15]],[[["blockpos",3]],["bool",15]],[[["mat3",3]],["bool",15]],[[["mat4",3]],["bool",15]],[[["quat",3]],["bool",15]],[[["vec2",3]],["bool",15]],[[["ivec2",3]],["bool",15]],[[["vec3",3]],["bool",15]],[[["ivec3",3]],["bool",15]],[[["vec4",3]],["bool",15]],[[],["vec2",3]],[[],["vec3",3]],[[],["vec4",3]],[[["f32",15]],["vec3",3]],[[["i32",15]],["ivec3",3]],[[["f32",15]],["vec4",3]],[[["i32",15]],["ivec4",3]],[[],["vec2",3]],[[],["vec3",3]],[[],["vec4",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[["formatter",3]],[["error",3],["result",4]]],[[],["vec2",3]],[[],["vec3",3]],[[],["vec4",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["worldblockcounts",3]]],[[]],[[]],[[]],[[["affine2",3]],["mat3",3]],[[["mat3a",3]],["mat3",3]],[[["mat4",3]],["mat3",3]],[[["affine3a",3]],["mat4",3]],[[]],[[]],[[["vec3a",3]],["vec2",3]],[[["vec4",3]],["vec2",3]],[[["xy",3],["f32",15]],["vec2",3]],[[],["vec2",3]],[[]],[[["vec3",3]],["vec2",3]],[[],["vec2",3]],[[["ivec3",3]],["ivec2",3]],[[["xy",3],["i32",15]],["ivec2",3]],[[["ivec4",3]],["ivec2",3]],[[]],[[],["ivec2",3]],[[],["ivec2",3]],[[],["vec3",3]],[[],["vec3",3]],[[],["vec3",3]],[[["vec3a",3]],["vec3",3]],[[["vec4",3]],["vec3",3]],[[["xyz",3],["f32",15]],["vec3",3]],[[]],[[["i32",15],["xyz",3]],["ivec3",3]],[[],["ivec3",3]],[[],["ivec3",3]],[[["ivec4",3]],["ivec3",3]],[[]],[[],["ivec3",3]],[[],["vec4",3]],[[]],[[],["vec4",3]],[[["__m128",3]],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[["quat",3]],["vec4",3]],[[],["vec4",3]],[[["affine3a",3]],["quat",3]],[[["f32",15]],["mat3",3]],[[],["quat",3]],[[["vec3",3],["f32",15]],["mat3",3]],[[["vec3",3],["f32",15]],["mat4",3]],[[["vec3",3],["f32",15]],["quat",3]],[[["vec3",3]],["mat3",3]],[[["vec4",3]],["mat4",3]],[[],["mat3",3]],[[],["mat4",3]],[[],["mat3",3]],[[],["mat4",3]],[[],["mat3",3]],[[],["mat4",3]],[[["f32",15]]],[[["vec3",3]],["mat3",3]],[[["vec4",3]],["mat4",3]],[[["eulerrot",4],["f32",15]],["mat3",3]],[[["eulerrot",4],["f32",15]],["mat4",3]],[[["eulerrot",4],["f32",15]],["quat",3]],[[["usize",15],["worldchunkcounts",3]]],[[["usize",15],["worldchunkcounts",3]]],[[["mat3",3]],["quat",3]],[[["mat4",3]],["quat",3]],[[["ivec2",3]]],[[["f32",15]]],[[["quat",3]],["mat3",3]],[[["quat",3]],["mat4",3]],[[["f32",15]]],[[["vec3",3]],["quat",3]],[[["vec3",3]],["quat",3]],[[["mat3",3]],["quat",3]],[[["mat4",3]],["quat",3]],[[["vec3",3],["quat",3]],["mat4",3]],[[["f32",15]],["mat3",3]],[[["f32",15]],["mat4",3]],[[["f32",15]],["quat",3]],[[["f32",15]],["mat3",3]],[[["f32",15]],["mat4",3]],[[["f32",15]],["quat",3]],[[["f32",15]],["mat3",3]],[[["f32",15]],["mat4",3]],[[["f32",15]],["quat",3]],[[["f32",15]],["mat3",3]],[[["f32",15]],["mat4",3]],[[["f32",15]],["quat",3]],[[["vec2",3]],["mat3",3]],[[["vec3",3]],["mat4",3]],[[["f32",15],["vec2",3]],["mat3",3]],[[["vec3",3],["quat",3]],["mat4",3]],[[["vec3",3]],["quat",3]],[[],["quat",3]],[[],["vec2",3]],[[],["ivec2",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec4",3]],[[],["quat",3]],[[],["vec2",3]],[[],["ivec2",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec4",3]],[[["vec2",3]],["mat3",3]],[[["vec3",3]],["mat4",3]],[[["f32",15]]],[[["vec3",3]]],[[["f32",15],["vec3",3]]],[[["vec4",3]],["quat",3]],[[["f32",15],["vec3",3]]],[[["f32",15]],["quat",3]],[[],["chunkpos",3]],[[["worldchunkcounts",3]],[["option",4],["usize",15]]],[[["worldchunkcounts",3]],["option",4]],[[["usize",15],["mat4",3]],["f32",15]],[[["dir",4]]],[[["dir",4]]],[[["f32",15]],["vec3",3]],[[["borrow",8],["ivec2",3]],["bool",15]],[[["vec3",3]],["bool",15]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["rect2",3]],["rect2",3]],[[["aabb",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["mat3",3]],[[],["mat4",3]],[[],["quat",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bvec2",3]],[[],["bvec3",3]],[[],["bvec4a",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["worldchunkcounts",3]],["bool",15]],[[["worldchunkcounts",3]],["bool",15]],[[],["usize",15]],[[],["f32",15]],[[],["f32",15]],[[],["f32",15]],[[],["f32",15]],[[],["f32",15]],[[],["f32",15]],[[],["f32",15]],[[],["f32",15]],[[],["f32",15]],[[],["f32",15]],[[],["f32",15]],[[],["f32",15]],[[["f32",15],["quat",3]],["quat",3]],[[["f32",15],["vec2",3]],["vec2",3]],[[["vec3",3],["f32",15]],["vec3",3]],[[["vec4",3],["f32",15]],["vec4",3]],[[["vec3",3]],["mat4",3]],[[["vec3",3]],["mat4",3]],[[],["ivec2",3]],[[["vec2",3]],["vec2",3]],[[["ivec2",3]],["ivec2",3]],[[["vec3",3]],["vec3",3]],[[["ivec3",3]],["ivec3",3]],[[["vec4",3]],["vec4",3]],null,[[],["f32",15]],[[],["i32",15]],[[],["f32",15]],[[],["i32",15]],[[],["f32",15]],[[["vec2",3]],["vec2",3]],[[["ivec2",3]],["ivec2",3]],[[["vec3",3]],["vec3",3]],[[["ivec3",3]],["ivec3",3]],[[["vec4",3]],["vec4",3]],null,null,[[],["f32",15]],[[],["i32",15]],[[],["f32",15]],[[],["i32",15]],[[],["f32",15]],[[["vec3",3]],["vec3",3]],[[["f32",15]],["mat3",3]],[[["vec3a",3]],["vec3a",3]],[[["mat3",3]],["mat3",3]],[[["affine2",3]]],[[["f32",15]]],[[["mat4",3]]],[[["vec4",3]]],[[["affine3a",3]]],[[["f32",15]],["quat",3]],[[["vec3a",3]]],[[["quat",3]],["quat",3]],[[["vec3",3]]],[[["vec2",3]],["vec2",3]],[[["f32",15]],["vec2",3]],[[["ivec2",3]],["ivec2",3]],[[["i32",15]],["ivec2",3]],[[["f32",15]],["vec3",3]],[[["vec3",3]],["vec3",3]],[[["i32",15]],["ivec3",3]],[[["ivec3",3]],["ivec3",3]],[[["vec4",3]],["vec4",3]],[[["f32",15]],["vec4",3]],[[["quat",3]]],[[["f32",15]]],[[["vec2",3]]],[[["ivec2",3]]],[[["i32",15]]],[[["vec3",3]]],[[["f32",15]]],[[["i32",15]]],[[["ivec3",3]]],[[["vec4",3]]],[[["f32",15]]],[[["mat3",3]],["mat3",3]],[[["mat4",3]],["mat4",3]],[[["quat",3]],["quat",3]],[[["f32",15]],["mat3",3]],[[["f32",15]],["mat4",3]],[[["vec3",3]],["vec3",3]],[[["vec3",3]],["vec3",3]],[[["vec3a",3]],["vec3a",3]],[[["vec3a",3]],["vec3a",3]],[[["vec4",3]],["vec4",3]],[[["angle",3]],["bool",15]],[[["plane",3]],["bool",15]],[[["rayaabbresult",4]],["bool",15]],[[["rect2",3]],["bool",15]],[[["worldblockcounts",3]],["bool",15]],[[["worldchunkcounts",3]],["bool",15]],[[["chunkpos",3]],["bool",15]],[[["blockpos",3]],["bool",15]],[[]],[[],["quat",3]],[[],["vec2",3]],[[],["ivec2",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec4",3]],[[["vec3",3]]],[[]],[[["mat4",3]]],[[["f32",15]]],[[]],[[["ivec2",3]]],[[["f32",15],["vec3",3]]],[[["i32",15]]],[[["i32",15]]],[[["i32",15]]],[[["i32",15]]],[[["f32",15]],["vec2",3]],[[["i32",15]],["ivec2",3]],[[["f32",15]],["vec3",3]],[[["i32",15]],["ivec3",3]],[[["f32",15]],["vec4",3]],[[],["vec3",3]],[[]],[[],["quat",3]],[[],["vec2",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec2",3]],[[],["vec3",3]],[[],["vec4",3]],[[]],[[]],[[]],null,[[["f32",15]],["mat4",3]],[[["f32",15]],["mat4",3]],[[["f32",15]],["mat4",3]],[[],["vec2",3]],[[],["ivec2",3]],[[["vec2",3]],["f32",15]],[[["ivec2",3]],["i32",15]],[[["f32",15]],["mat4",3]],[[["f32",15]],["mat4",3]],[[["f32",15]],["mat4",3]],[[["f32",15]],["mat4",3]],[[["f32",15]],["mat4",3]],[[["f32",15]],["mat4",3]],[[["f32",15]],["mat4",3]],[[["f32",15]],["vec2",3]],[[["f32",15]],["vec3",3]],[[["f32",15]],["vec4",3]],[[],["mat3",3]],[[],["mat4",3]],[[],["quat",3]],[[],["vec2",3]],[[],["ivec2",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec4",3]],[[["vec3",3]],["vec3",3]],null,[[],["vec2",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec2",3]],[[],["vec3",3]],[[],["vec4",3]],[[["usize",15]],["vec3",3]],[[["usize",15]],["vec4",3]],[[["bvec2",3],["vec2",3]],["vec2",3]],[[["bvec2",3],["ivec2",3]],["ivec2",3]],[[["vec3",3],["bvec3",3]],["vec3",3]],[[["ivec3",3],["bvec3",3]],["ivec3",3]],[[["vec4",3],["bvec4a",3]],["vec4",3]],[[],["result",4]],[[["mat4",3],["usize",15],["f32",15]]],[[],["vec2",3]],[[],["ivec2",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec4",3]],null,[[["f32",15],["quat",3]],["quat",3]],[[["f32",15]],["vec2",3]],[[["i32",15]],["ivec2",3]],[[["f32",15]],["vec3",3]],[[["i32",15]],["ivec3",3]],[[["f32",15]],["vec4",3]],[[]],[[["mat3",3]],["mat3",3]],[[["mat4",3]]],[[["quat",3]],["quat",3]],[[["vec2",3]],["vec2",3]],[[["ivec2",3]],["ivec2",3]],[[["vec3",3]],["vec3",3]],[[["ivec3",3]],["ivec3",3]],[[["vec4",3]],["vec4",3]],[[]],[[["vec2",3]]],[[["ivec2",3]]],[[["vec3",3]]],[[["ivec3",3]]],[[["vec4",3]]],[[["mat3",3]],["mat3",3]],[[["mat4",3]],["mat4",3]],[[],["mat3",3]],[[],["mat4",3]],[[],["quat",3]],[[],["vec2",3]],[[],["ivec2",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec4",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["f32",15]],[[["eulerrot",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["f32",15]],[[]],[[],["vec3",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[["borrow",8],["rect2",3]],["rect2",3]],[[["vec2",3]],["vec2",3]],[[["vec3",3]],["vec3",3]],[[["vec3a",3]],["vec3a",3]],[[["vec2",3]],["vec2",3]],[[["vec3",3]],["vec3",3]],[[["vec3a",3]],["vec3a",3]],[[],["mat3",3]],[[],["mat4",3]],[[],["vec2",3]],[[],["ivec2",3]],[[],["vec3",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["option",4],["vec2",3]]],[[],[["vec3",3],["option",4]]],[[],[["vec4",3],["option",4]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["vec2",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec2",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec2",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec2",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["f32",15]],null,null,null,null,[[],["vec2",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec2",3]],[[],["ivec2",3]],[[],["vec2",3]],[[],["ivec2",3]],[[],["vec2",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec2",3]],[[],["ivec2",3]],[[],["vec2",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec2",3]],[[],["ivec2",3]],[[],["vec2",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["f32",15]],null,null,null,null,[[],["vec2",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec2",3]],[[],["ivec2",3]],[[],["vec2",3]],[[],["ivec2",3]],[[],["vec2",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec2",3]],[[],["ivec2",3]],[[],["vec2",3]],[[],["ivec2",3]],[[],["vec2",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec2",3]],[[],["ivec2",3]],[[],["vec2",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["f32",15]],null,null,null,null,[[],["vec2",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec2",3]],[[],["ivec2",3]],[[],["vec2",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec2",3]],[[],["ivec2",3]],[[],["vec2",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec2",3]],[[],["ivec2",3]],[[],["vec2",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec3",3]],[[],["ivec3",3]],[[],["vec3",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],[[],["vec4",3]],[[],["ivec4",3]],[[],["vec4",3]],null,null,null],"p":[[3,"Vec2"],[3,"IVec2"],[3,"Vec3"],[3,"IVec3"],[3,"Vec4"],[3,"Mat3"],[3,"Mat4"],[3,"Quat"],[4,"RayAabbResult"],[4,"Dir"],[3,"BlockPos"],[3,"Angle"],[3,"Ray"],[3,"Aabb"],[3,"Frustum"],[3,"Plane"],[3,"Rect2"],[3,"Sphere"],[3,"WorldBlockCounts"],[3,"WorldChunkCounts"],[3,"ChunkPos"],[13,"Intersect"]]},\
"voxrs_render":{"doc":"","t":[0,0,0,6,6,3,3,3,6,3,3,13,3,13,3,4,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,12,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,4,13,13,3,13,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["blueprint","render","ui","BlockIdx","BlockMatIdx","Blueprint","Camera","Chunk","ChunkId","DynamicBlock","Panel","Panel","Text","Text","TextSection","Ui","aabb","aabb","add_chunk","aspect","block_size","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","camera","chunks","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","color","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","dynamic_blocks","eye","fmt","fmt","fmt","font","font_size","fovy","from","from","from","from","from","from","from","from","id","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","material","new","new","new","new","pos","pos","pos","sections","set_block_size","set_camera","set_world_mat","size","size","target","text","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uis","up","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","view_proj_mat","vis","world_block_mat_handle","zfar","znear","Command","Exit","Render","Renderer","Resize","borrow","borrow","borrow_mut","borrow_mut","create_rendering_thread","deref","deref","deref_mut","deref_mut","downcast","downcast","drop","drop","from","from","init","init","into","into","new","render","resize","resize_self","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","FontAtlas","GlyphAtlasInfo","GlyphPos","alloc_id","atlas_idx","atlas_info","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","commit","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","fmt","fmt","from","from","from","get_font","get_fonts","get_texture","init","init","init","into","into","into","new","pos","register","register_font","size","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","uv_end","uv_start"],"q":["voxrs_render","","","voxrs_render::blueprintvoxrs_render::render","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","voxrs_render::ui","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","which material is used in blockindicate glyph location in texture","glyph position indicate where glyph exists in texture","","","","","","","","","","","","","","commit modified atlas to gpu","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,2,3,4,5,4,2,4,2,3,1,5,6,7,8,4,2,3,1,5,6,7,8,4,4,2,6,7,8,2,6,7,8,6,4,5,4,2,3,1,5,6,7,8,4,2,3,1,5,6,7,8,4,2,3,1,5,6,7,8,4,2,3,1,5,6,7,8,4,5,6,7,8,8,8,5,4,2,3,1,5,6,7,8,2,4,2,3,1,5,6,7,8,4,2,3,1,5,6,7,8,3,4,2,3,6,2,6,7,7,4,4,4,6,7,5,8,2,6,7,8,4,2,3,1,5,6,7,8,4,2,3,1,5,6,7,8,4,2,3,1,5,6,7,8,4,5,4,2,3,1,5,6,7,8,5,2,4,5,5,0,9,9,0,9,9,10,9,10,0,9,10,9,10,9,10,9,10,9,10,9,10,9,10,10,10,10,10,9,10,9,10,9,10,9,10,0,0,0,11,11,12,13,12,11,13,12,11,12,11,12,11,13,13,13,12,11,13,12,11,13,12,11,13,12,11,12,11,13,12,11,13,13,13,13,12,11,13,12,11,13,12,13,13,12,12,11,13,12,11,13,12,11,13,12,11,13,12,11,11,11],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["safecloner",4],["chunk",3]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[],["panel",3]],[[],["text",3]],[[],["textsection",3]],[[]],[[]],[[]],[[]],null,[[]],[[],["camera",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[["aabb",3],["vec",3],["vec3",3],["bitflags",3],["u8",15],["vec",3]]],[[["assethandle",3],["aabb",3],["materialasset",3]]],[[["vec4",3],["ivec2",3]]],null,null,null,null,[[["f32",15]]],[[["camera",3]]],[[["worldmaterialasset",3],["assethandle",3]]],null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["command",4],["receiver",3],["window",3],["assetmanager",3],["filesystem",8]],["joinhandle",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["assetmanager",3],["window",3]]],[[["blueprint",3]],[["result",4],["swapchainerror",4]]],[[["u32",15],["physicalsize",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["glyphpos",3]],[[],["glyphatlasinfo",3]],[[]],[[]],[[["queue",3]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["fontid",3]]],[[],[["vec",3],["fontarc",3]]],[[["usize",15]],["dynamictexture",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],null,[[["glyphid",3],["u32",15],["device",3],["fontid",3]],[["glyphatlasinfo",3],["option",4]]],[[["assethandle",3]],["fontid",3]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],null,null],"p":[[4,"Ui"],[3,"Chunk"],[3,"DynamicBlock"],[3,"Blueprint"],[3,"Camera"],[3,"Panel"],[3,"Text"],[3,"TextSection"],[4,"Command"],[3,"Renderer"],[3,"GlyphAtlasInfo"],[3,"GlyphPos"],[3,"FontAtlas"]]},\
"voxrs_rhi":{"doc":"","t":[17,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["DEPTH_FORMAT","DynamicBuffer","DynamicTexture","Texture","add_slice","allocate","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","commit","create_depth_texture","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","from","from","from","from_bytes","from_image","get_buffer","init","init","init","into","into","into","new","new","sampler","sampler","set_pixel","texture","texture","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","view","view"],"q":["voxrs_rhi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","DynamicTexture can write runtime only support rgba8 right …","","add to buffer and return (usize: buffer index, …","","","","","","","","clear all buffers except first one","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,2,3,2,1,3,2,1,1,2,3,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,3,1,3,2,1,3,2,1,2,1,3,2,2,3,2,3,2,1,3,2,1,3,2,1,3,2,1,3,2],"f":[null,null,null,null,[[["device",3],["queue",3]]],[[["u32",15]],[["option",4],["allocation",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["queue",3]]],[[["device",3],["swapchaindescriptor",3],["str",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[["device",3],["queue",3],["str",15]],["result",6]],[[["device",3],["queue",3],["str",15],["option",4],["dynamicimage",4]],["result",6]],[[["usize",15]],["buffer",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[["device",3],["u32",15]]],[[["bufferaddress",6],["bufferusage",3],["str",15]]],null,null,[[["u32",15]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],null,null],"p":[[3,"DynamicBuffer"],[3,"DynamicTexture"],[3,"Texture"]]},\
"voxrs_types":{"doc":"","t":[3,3,3,13,13,4,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,0,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,10,11,10,11,11,11,11,10,11],"n":["Clock","Color","Fps","R","Rw","SafeCloner","a","as_array","b","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_read","default","default","deref","deref_mut","fmt","from","from","from","from","g","get_fps","into","into","into","into","io","new","new","new","new","r","strong_count","tick","tick","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","FileSystem","GeneralFileSystem","borrow","borrow_mut","from","into","read_binary","read_binary","read_text","read_text","try_from","try_into","type_id","write_text","write_text"],"q":["voxrs_types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","voxrs_types::io","","","","","","","","","","","","","",""],"d":["","","","","","write after clone cloned T is never chagned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,1,0,2,2,2,3,4,1,2,3,4,1,2,2,2,1,3,4,1,1,2,3,4,1,2,2,4,3,4,1,2,0,3,4,1,2,2,1,3,4,2,3,4,1,2,3,4,1,2,3,4,1,2,0,0,5,5,5,5,6,5,6,5,5,5,5,6,5],"f":[null,null,null,null,null,null,null,[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["color",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,[[],["f32",15]],[[]],[[]],[[]],[[]],null,[[]],[[],["fps",3]],[[]],[[["f32",15]]],null,[[],["usize",15]],[[],["duration",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[["path",3]],[["pin",3],["box",3]]],[[["path",3]],[["box",3],["pin",3]]],[[["path",3]],[["box",3],["pin",3]]],[[["path",3]],[["box",3],["pin",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["path",3],["str",15]],["result",6]],[[["path",3],["str",15]],["result",6]]],"p":[[4,"SafeCloner"],[3,"Color"],[3,"Clock"],[3,"Fps"],[3,"GeneralFileSystem"],[8,"FileSystem"]]},\
"voxrs_ui":{"doc":"","t":[4,4,13,3,13,13,13,3,13,13,3,3,4,13,3,3,3,13,3,3,13,13,3,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,3,13,13,13,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,5,5,5,5,5],"n":["AnchorHorizon","AnchorVertical","Bottom","ButtonInfo","Center","Center","Clicked","EditableTextInfo","Fill","Fill","FocusedWidget","InputQueue","Interaction","Left","OutputQueue","PanelInfo","PanelWidget","Right","ScreenResolution","TerminalInfo","TerminalInput","TextEdited","TextInfo","Top","WidgetBuilder","WidgetPlacementInfo","add","add","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","begin_child","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button","child","clear","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","color","color","color","contents","contents","contents","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","editable_text","end_child","fmt","fmt","fmt","font","font","font","font_size","font_size","font_size","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get_parent","h_anchor","handle_event","has_focus","height","hide","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init_resources","input","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","iter","iter","new","new","new","panel","placement","placement","placement","placement","placement","pos","query_id","set","size","system","terminal","text","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","v_anchor","width","Character","KeyboardInput","KeyboardInput","MouseClick","Resized","WidgetInput","WidgetVisible","WidgetVisible","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","downcast","downcast","downcast","drop","drop","drop","from","from","from","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","invisible","is_back","is_del","is_down","is_left","is_return","is_right","is_up","new","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","visible","pos","clear_inputs","clear_inputs_system","process_inputs","process_inputs_system","render","render_system"],"q":["voxrs_uivoxrs_ui::input","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","voxrs_ui::input::WidgetInput","voxrs_ui::system","","","","",""],"di":[0,0,1,0,2,1,3,0,2,1,0,0,0,2,0,0,0,2,0,0,3,3,0,1,0,0,4,5,4,5,6,7,8,9,10,11,12,13,3,14,15,2,1,4,5,6,7,8,9,10,11,12,13,3,14,15,2,1,14,4,5,6,7,8,9,10,11,12,13,3,14,15,2,1,4,5,6,7,8,9,10,11,12,13,3,14,15,2,1,14,14,4,5,6,15,2,1,15,2,1,9,10,13,11,12,13,4,5,6,8,2,1,4,5,6,7,8,9,10,11,12,13,3,14,15,2,1,4,5,6,7,8,9,10,11,12,13,3,14,15,2,1,4,5,6,7,8,9,10,11,12,13,3,14,15,2,1,4,5,6,7,8,9,10,11,12,13,3,14,15,2,1,14,14,15,2,1,11,12,13,11,12,13,4,5,6,7,8,9,10,11,12,13,3,14,15,2,1,6,14,15,14,6,7,14,4,5,6,7,8,9,10,11,12,13,3,14,15,2,1,0,0,4,5,6,7,8,9,10,11,12,13,3,14,15,2,1,4,5,6,7,8,9,10,11,12,13,3,14,15,2,1,4,5,6,7,8,9,10,11,12,13,3,15,2,1,4,5,6,7,8,9,10,11,12,13,3,14,15,2,1,5,4,5,7,8,14,14,9,10,11,12,13,15,14,6,15,0,14,14,15,2,1,4,5,6,7,8,9,10,11,12,13,3,14,15,2,1,4,5,6,7,8,9,10,11,12,13,3,14,15,2,1,4,5,6,7,8,9,10,11,12,13,3,14,15,2,1,4,5,6,7,8,9,10,11,12,13,3,14,15,2,1,15,7,16,0,16,16,16,0,0,16,16,17,18,16,17,18,16,17,18,16,17,18,16,17,18,16,17,18,16,17,18,16,17,18,16,17,18,16,17,18,16,17,18,16,17,18,16,17,18,16,17,18,18,17,17,17,17,17,17,17,17,16,17,18,16,17,18,16,17,18,16,17,18,18,19,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["widgetinput",4]]],[[]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["buttoninfo",3]]],[[]],[[]],[[]],[[]],[[],["widgetplacementinfo",3]],[[],["anchorhorizon",4]],[[],["anchorvertical",4]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["editabletextinfo",3]]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["entity",3],["option",4]]],[[],[["entity",3],["option",4]]],null,[[]],[[],["bool",15]],null,[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["u32",15],["resources",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["arc",3]],[["any",8],["arc",3]]],[[["arc",3]],[["any",8],["arc",3]]],[[["arc",3]],[["any",8],["arc",3]]],[[["arc",3]],[["any",8],["arc",3]]],[[["arc",3]],[["any",8],["arc",3]]],[[["arc",3]],[["any",8],["arc",3]]],[[["arc",3]],[["any",8],["arc",3]]],[[["arc",3]],[["any",8],["arc",3]]],[[["arc",3]],[["any",8],["arc",3]]],[[["arc",3]],[["any",8],["arc",3]]],[[["arc",3]],[["any",8],["arc",3]]],[[["arc",3]],[["any",8],["arc",3]]],[[["arc",3]],[["any",8],["arc",3]]],[[["arc",3]],[["any",8],["arc",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[["rc",3]],[["rc",3],["any",8]]],[[["rc",3]],[["rc",3],["any",8]]],[[["rc",3]],[["rc",3],["any",8]]],[[["rc",3]],[["rc",3],["any",8]]],[[["rc",3]],[["rc",3],["any",8]]],[[["rc",3]],[["rc",3],["any",8]]],[[["rc",3]],[["rc",3],["any",8]]],[[["rc",3]],[["rc",3],["any",8]]],[[["rc",3]],[["rc",3],["any",8]]],[[["rc",3]],[["rc",3],["any",8]]],[[["rc",3]],[["rc",3],["any",8]]],[[["rc",3]],[["rc",3],["any",8]]],[[["rc",3]],[["rc",3],["any",8]]],[[["rc",3]],[["rc",3],["any",8]]],[[]],[[]],[[]],[[["u32",15]]],[[]],[[["resources",3],["world",3]]],[[["panelinfo",3]]],null,null,null,null,null,null,[[["option",4]]],[[["entity",3]]],null,null,[[["terminalinfo",3]]],[[["textinfo",3]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["box",3],["global",3]],[["any",8],["box",3],["global",3]]],[[["arc",3]],[["any",8],["arc",3]]],[[["arc",3]],[["any",8],["arc",3]]],[[["arc",3]],[["any",8],["arc",3]]],[[["rc",3]],[["rc",3],["any",8]]],[[["rc",3]],[["rc",3],["any",8]]],[[["rc",3]],[["rc",3],["any",8]]],[[["entity",3]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["virtualkeycode",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["bool",15],["entity",3]]],null,[[["inputqueue",3]]],[[]],[[["inputqueue",3],["outputqueue",3],["subworld",3],["focusedwidget",3],["nextdepth",3],["screenresolution",3]]],[[]],[[["subworld",3],["screenresolution",3],["blueprint",3]]],[[]]],"p":[[4,"AnchorVertical"],[4,"AnchorHorizon"],[4,"Interaction"],[3,"InputQueue"],[3,"OutputQueue"],[3,"FocusedWidget"],[3,"ScreenResolution"],[3,"PanelWidget"],[3,"PanelInfo"],[3,"ButtonInfo"],[3,"TextInfo"],[3,"EditableTextInfo"],[3,"TerminalInfo"],[3,"WidgetBuilder"],[3,"WidgetPlacementInfo"],[4,"WidgetInput"],[3,"KeyboardInput"],[3,"WidgetVisible"],[13,"MouseClick"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};